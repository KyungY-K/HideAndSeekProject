<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="Admin_productDAO">
  
  	<select id="adminProductContent" parameterType="int" resultType="ProductDTO">
  		select * from product where product_no = #{no}
  	</select>
  	
  	<insert id="adminProductInsertt" parameterType="ProductDTO">
  		insert into product values(
  		(select max(product_no) from product) +1,
  		#{product_name},
  		#{product_category},
  		#{product_introduce1},
  		#{product_introduce2},
  		#{product_company},
  		#{product_alcohol},
  		#{product_dosu},
  		#{product_sweet},
  		#{product_acidity},
  		#{product_soda},
  		#{product_material},
  		#{product_price},
  		#{product_stock},
  		#{product_price}*0.01,
  		#{product_thumbnail},
  		default,
  		sysdate,
  		#{product_amount}
  		)
  	</insert>
  
  
  	<update id="adminProductUpdatee" parameterType="ProductDTO">
  		update product set 
  		product_name = #{product_name}, 
  		product_category = #{product_category}, 
  		product_introduce1 = #{product_introduce1}, 
  		product_introduce2 = #{product_introduce2}, 
  		product_company = #{product_company}, 
  		product_alcohol = #{product_alcohol}, 
  		product_dosu = #{product_dosu}, 
  		product_sweet = #{product_sweet}, 
  		product_acidity = #{product_acidity}, 
  		product_soda = #{product_soda}, 
  		product_material = #{product_material},
  		product_price = #{product_price},
  		product_stock = #{product_stock},
  		product_point = #{product_point},
  		product_thumbnail = #{product_thumbnail},
  		product_status = #{product_status},
  		product_amount = #{product_amount}
  		where product_no = #{product_no}
  	</update>
  	
  	<update id="adminProductUpdateWithoutThumbnail" parameterType="ProductDTO">
  		update product set 
  		product_name = #{product_name}, 
  		product_category = #{product_category}, 
  		product_introduce1 = #{product_introduce1}, 
  		product_introduce2 = #{product_introduce2}, 
  		product_company = #{product_company}, 
  		product_alcohol = #{product_alcohol}, 
  		product_dosu = #{product_dosu}, 
  		product_sweet = #{product_sweet}, 
  		product_acidity = #{product_acidity}, 
  		product_soda = #{product_soda}, 
  		product_material = #{product_material},
  		product_price = #{product_price},
  		product_stock = #{product_stock},
  		product_point = #{product_point},
  		product_status = #{product_status},
  		product_amount = #{product_amount}
  		where product_no = #{product_no}
  	</update>
  	
  	
  	
  	<delete id="adminProductDelete" parameterType="int">
  		delete from product where product_no = #{product_no}
  	</delete>
  	
  	<update id="seq" parameterType="int">
  		<![CDATA[
  			update product set product_no = product_no - 1 where product_no > #{product_no}
  		]]>
  	</update>
  	
  	<select id="getStopProductList" parameterType="PageDTO" resultType="admin_productDTO">
  		<![CDATA[select * from (select p.*, row_number() over(order by product_no desc) rnum from product p  where p.product_status='판매중지')
		where rnum >= #{startNo} and rnum <= #{endNo}]]>
  	</select>
  	
  	<select id="getIngProductList" parameterType="PageDTO" resultType="admin_productDTO">
  		<![CDATA[select * from (select p.*, row_number() over(order by product_no desc) rnum from product p  where p.product_status='판매')
		where rnum >= #{startNo} and rnum <= #{endNo}]]>
  	</select>
  	
  	<select id="stopProductCount" resultType="int">
		select count(*) from product where product_status = '판매중지'
	</select>
	
  	<select id="salProductCount" resultType="int">
		select count(*) from product where product_status = '판매'
	</select>
	
	<select id="getSearchIngListCount" parameterType="String" resultType="int">
		select count(*) from product where (((product_name like '%' || #{keyword} || '%') or (product_company like '%' || #{keyword} || '%') or (product_no like '%' || #{keyword} || '%')) and product_status='판매') order by product_no desc
	</select>
	
	<select id="adminIngProductSearch" parameterType="hashmap" resultType="admin_productDTO">
		<if test='field == "allSearch"'>
			<![CDATA[select * from (select p.*, row_number() over(order by product_no desc) rnum from product p where (((product_name like '%' || #{keyword} || '%') or (product_company like '%' || #{keyword} || '%') or (product_no like '%' || #{keyword} || '%')))and product_status='판매') 
			where rnum >= ((#{Page.page} * #{Page.rowsize}) - (#{Page.rowsize} - 1)) and rnum <= #{Page.page} * #{Page.rowsize}]]>
		</if>
	
		<if test='field == "name"'>
			<![CDATA[select * from (select p.*, row_number() over(order by product_no desc) rnum from product p where (product_name like '%' || #{keyword} || '%') and product_status='판매')
 			where rnum >= ((#{Page.page} * #{Page.rowsize}) - (#{Page.rowsize} - 1)) and rnum <= #{Page.page} * #{Page.rowsize}]]>
		</if>
	
		<if test='field == "company"'>
			<![CDATA[select * from (select p.*, row_number() over(order by product_no desc) rnum from product p where ((product_company like '%' || #{keyword} || '%'))and product_status='판매')
 			where rnum >= ((#{Page.page} * #{Page.rowsize}) - (#{Page.rowsize} - 1)) and rnum <= #{Page.page} * #{Page.rowsize}]]>
		</if>
		
	</select>
	
<!-- 	<select id="getProductCateSortListTakju" resultType="admin_productDTO"> -->
<!--   		select * from product where product_category = 'takju' -->
<!--   	</select> -->
  	
<!-- 	<select id="getProductCateSortChungjuList" resultType="admin_productDTO"> -->
<!--   		select * from product where product_category = 'chungju' -->
<!--   	</select> -->
  	
<!-- 	<select id="getProductCateSortWineList" resultType="admin_productDTO"> -->
<!--   		select * from product where product_category = 'wine' -->
<!--   	</select> -->
  	
<!-- 	<select id="getProductCateSortSojuList" resultType="admin_productDTO"> -->
<!--   		select * from product where product_category = 'soju' -->
<!--   	</select> -->
  	
	<select id="getCateProductList" resultType="ProductDTO">
  		select * from product where product_category = #{category} order by product_date desc
  	</select>

  
  </mapper>
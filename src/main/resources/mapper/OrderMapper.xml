<?xml version="1.0" encoding="UTF-8"?>

    <!-- 
  	형식) <![CDATA[쿼리문]]>
  	쿼리문을 작성할 때 조건식 기호(>, <, &)을 사용해야 하는데 XML에서는 이러한 기호들을 쿼리문의 조건식 기호로 인식하는것이 아니라
  	태그로 인식하는 경우가 발생한다. 이런 경우 에러가 발행한다. 따라서 조건식 기호들을 단순한 문자열로 인식시켜주어야 한다. -->
  
  	<!-- alias 모두 파일명과 똑같이 했으니 
  	resultType같은곳에 쓸때 똑같이 쓰시면 됩니다 (CardDAO, CardDTO) -->
  	
  	<!--  예시입니다
  	
	<select id="allCard" parameterType="int" resultType="CardDTO">
		select * from card
	</select>
	
    <insert id="" parameterType="CardDTO">
    
    </insert>
    
    <update id="" parameterType="CardDTO">
    
    </update>
	
	<delete id="" parameterType="int">

	</delete>
  
 	 -->
 	 
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="OrderDAO">
  	<!-- parameterType 결과가 들어오는 값 
         resultType 결과가 나가는 값 -->
  
		<!-- 최근 5개 주문만 불러오는 sql문 -->
  	<select id="admin_new5order" resultType="OrderDTO">
<!--   	select * from tb_order -->
		<![CDATA[select * from (select rownum as rownumber, O.* from tb_order O order by order_date desc) where rownum <= 5]]>
	</select>
	
  	<select id="admin_order" resultType="OrderDTO">
	select * from tb_order
	</select>
	
	<select id="admin_getOrderListCount" resultType="int">
		select count(*) from tb_order order by order_date desc
	</select>
	
	<!-- 오더테이블의의 전체 주문 목록 수를 받아오는 쿼리문 -->
	<select id="getOrderListCount" parameterType="int" resultType="int">
		select count(*) from tb_order
	</select>
	
	<!-- 오더테이블의 리스트를 받아오는 쿼리문 -->
	<select id="getOrderList" parameterType="PageDTO" resultType="OrderDTO">
		<![CDATA[select * from (select p.*, row_number() over(order by order_no desc) rnum from tb_order p) 
		where rnum >= #{startNo} and rnum <= #{endNo}]]>
	</select>
	
	<!-- 오더리스트에 상품번호에 해당하는 상품 정보를 받아오는 쿼리문 -->		
	<select id="getOrderProductList" parameterType="int" resultType="ProductDTO">
		select * from product where product_no = #{product_no}
	</select>
	
	<!-- 주문번호에 해당하는 주문내역의 주문상태를 변경하는 메서드 -->
	<update id="orderStatusChange" parameterType="Map" >
		update tb_order set order_status = #{key} where order_no = #{no}
	</update>
	
	<!-- 오더테이블의 검색 리스트의 수를 받아오는 메서드  -->
	<select id="getOrderSearchListCount" parameterType="String" resultType="int">
		select count(*) from tb_order where user_id like '%' || #{keyword} || '%'
	</select>
	
	<!-- 오더테이블의 검색 리스트를 받아오는 메서드 -->
	<select id="getOrderSearchList" parameterType="Map" resultType="OrderDTO">
		<![CDATA[select * from (select p.*, row_number() over(order by order_no desc) rnum from tb_order p where user_id like '%' || #{keyword} || '%') 
			where rnum >= ((#{Page.page} * #{Page.rowsize}) - (#{Page.rowsize} - 1)) and rnum <= #{Page.page} * #{Page.rowsize}]]>
	</select>
	
	<!-- 오더테이블의 주문 취소된 주문 목록 수를 받아오는 쿼리문 -->
	<select id="getOrderDelListCount" parameterType="int" resultType="int">
		select count(*) from tb_order where order_status = '취소'
	</select>
	
	<!-- 오더테이블의 주문 취소된 리스트를 받아오는 쿼리문 -->
	<select id="getOrderDelList" parameterType="PageDTO" resultType="OrderDTO">
		<![CDATA[select * from (select p.*, row_number() over(order by order_no desc) rnum from tb_order p where order_status = '취소') 
		where rnum >= #{startNo} and rnum <= #{endNo}]]>
	</select>
	
	<!-- 오더테이블의 주문 취소된 검색 리스트의 수를 받아오는 메서드  -->
	<select id="getOrderDelSearchListCount" parameterType="String" resultType="int">
		select count(*) from tb_order where order_status = '취소' and user_id like '%' || #{keyword} || '%'
	</select>
	
	<!-- 오더테이블의 주문 취소된 검색 리스트를 받아오는 메서드 -->
	<select id="getOrderDelSearchList" parameterType="Map" resultType="OrderDTO">
		<![CDATA[select * from (select p.*, row_number() over(order by order_no desc) rnum from tb_order p where order_status = '취소' and user_id like '%' || #{keyword} || '%') 
			where rnum >= ((#{Page.page} * #{Page.rowsize}) - (#{Page.rowsize} - 1)) and rnum <= #{Page.page} * #{Page.rowsize}]]>
	</select>
	
	<!-- 오더테이블의 같은 주문 패키지에서 주문한 제품 갯수 받아오는 메서드 -->
	<select id="getOrderSamePackageCount" parameterType="int" resultType="int">
		select count(order_package) from tb_order where order_package = ?;
	</select>
	
	<!-- 오더리스트에 패키지번호에 해당하는 주문정보를 받아오는 쿼리문 -->		
	<select id="getOrderSamePakage" parameterType="int" resultType="OrderDTO">
		<![CDATA[
		select * from tb_order where order_package = #{no} order by order_no desc
		]]>
	</select>
	
	<!-- 오더 테이블에 맥스 패키지 값을 받아오는 쿼리문 -->
	<select id="getOrderMaxPackageNo" resultType="int">
		select nvl(max(order_package),0)+1 from tb_order
	</select>
	
	<!-- 오더 테이블에 맥스 오더 넘버를 받아오는 쿼리문 -->
	<select id="getOrderMaxNo" resultType="int">
		select nvl(max(order_no),0)+1 from tb_order
	</select>
	
	
	<!-- 오더 테이블에 주문 정보를 넣는 쿼리문 -->
	<insert id="insertorder" parameterType="map">
		insert into tb_order values(#{orderno}, default, sysdate, #{userId}, #{product_no}, #{amount}, #{packageno}, #{delivery_no})
	</insert>

	<!-- 주문 완료시 해당하는 상품의 재고 수량을 낮추는 쿼리문 -->
	<update id="updateProductStock" parameterType="map">
		update product set product_stock = product_stock - #{amount} where product_no = #{product_no}
	</update>
	
	<!-- 주문 완료시 해당하는 유저가 사용한 포인트를 차감해주는 메서드 -->
	<update id="updateMinusPoint" parameterType="map">
		update tb_user set user_point = user_point - #{minuspoint} where user_id = #{userId}
	</update>
	
	<!-- 주문 완료시 해당하는 유저의 정보에 포인트를 적립해주는 쿼리문 -->
	<update id="updateSavePoint" parameterType="map">
		update tb_user set user_point = user_point + #{savepoint} where user_id = #{userId}
	</update>
	
	<update id="updateProductStatus" parameterType="map">
		update product set product_status = '품절' where product_no = #{product_no} and product_stock = 0
	</update>
	
	<select id="orderUser_List" resultType="OrderDTO" parameterType="String">
		select * from tb_order tbo join product p on tbo.product_no = p.product_no where user_id =#{userId}
	</select>
	
	
  
  </mapper>